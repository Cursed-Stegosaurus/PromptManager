{
  "version": 3,
  "sources": ["../../src/lib/searchWorker.ts"],
  "sourcesContent": ["// Enhanced search worker with fuzzy search, relevance scoring, and advanced filtering\r\ninterface Item { \r\n  id: string; \r\n  title: string; \r\n  body: string; \r\n  tags: string[]; \r\n  favorite?: boolean; \r\n  hidden?: boolean; \r\n  deletedAt?: string;\r\n  category?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\ninterface Query { \r\n  q: string; \r\n  showHidden: boolean; \r\n  includeBin: boolean;\r\n  sortBy?: 'relevance' | 'title' | 'createdAt' | 'updatedAt' | 'favorite';\r\n  sortOrder?: 'asc' | 'desc';\r\n}\r\n\r\ninterface SearchResult {\r\n  item: Item;\r\n  score: number;\r\n  matches: string[];\r\n}\r\n\r\nself.onmessage = (e: MessageEvent) => {\r\n  const { items, query } = e.data as { items: Item[]; query: Query };\r\n  const res = search(items, query);\r\n  (self as unknown as Worker).postMessage(res);\r\n};\r\n\r\nfunction search(items: Item[], q: Query): Item[] {\r\n  const { tokens, filters, exactMatches } = parse(q.q);\r\n  \r\n  // Apply filters first\r\n  let filtered = items.filter(it => {\r\n    if (!q.includeBin && it.deletedAt) return false;\r\n    if (!q.showHidden && it.hidden) return false;\r\n    if (filters.fav === true && !it.favorite) return false;\r\n    if (filters.hidden === true && !it.hidden) return false;\r\n    if (filters.bin === true && !it.deletedAt) return false;\r\n    if (filters.category && it.category !== filters.category) return false;\r\n    if (filters.date && it.updatedAt) {\r\n      const itemDate = new Date(it.updatedAt);\r\n      const filterDate = new Date(filters.date);\r\n      if (itemDate < filterDate) return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  if (tokens.length === 0 && Object.keys(filters).length === 0) {\r\n    return sortResults(filtered.map(item => ({ item, score: 0, matches: [] })), q.sortBy, q.sortOrder);\r\n  }\r\n\r\n  // Perform search with scoring\r\n  const results: SearchResult[] = filtered.map(item => {\r\n    const { score, matches } = calculateScore(item, tokens, exactMatches);\r\n    return { item, score, matches };\r\n  }).filter(result => result.score > 0);\r\n\r\n  // Sort by relevance score\r\n  const sorted = sortResults(results, q.sortBy, q.sortOrder);\r\n  \r\n  return sorted.map(result => result.item);\r\n}\r\n\r\nfunction calculateScore(item: Item, tokens: string[], exactMatches: string[]): { score: number; matches: string[] } {\r\n  let score = 0;\r\n  const matches: string[] = [];\r\n  const searchableText = `${item.title} ${item.tags.join(\" \")} ${item.body}`.toLowerCase();\r\n  \r\n  for (const token of tokens) {\r\n    let tokenScore = 0;\r\n    let found = false;\r\n    \r\n    // Exact matches get highest score\r\n    if (exactMatches.includes(token)) {\r\n      if (item.title.toLowerCase().includes(token)) {\r\n        tokenScore += 100;\r\n        found = true;\r\n      }\r\n      if (item.tags.some(tag => tag.toLowerCase().includes(token))) {\r\n        tokenScore += 80;\r\n        found = true;\r\n      }\r\n      if (item.body.toLowerCase().includes(token)) {\r\n        tokenScore += 60;\r\n        found = true;\r\n      }\r\n    } else {\r\n      // Fuzzy matching with different weights\r\n      if (item.title.toLowerCase().includes(token)) {\r\n        tokenScore += 50;\r\n        found = true;\r\n      }\r\n      if (item.tags.some(tag => tag.toLowerCase().includes(token))) {\r\n        tokenScore += 40;\r\n        found = true;\r\n      }\r\n      if (item.body.toLowerCase().includes(token)) {\r\n        tokenScore += 20;\r\n        found = true;\r\n      }\r\n      \r\n      // Partial word matching\r\n      if (!found) {\r\n        const words = searchableText.split(/\\s+/);\r\n        for (const word of words) {\r\n          if (word.startsWith(token) || word.endsWith(token)) {\r\n            tokenScore += 10;\r\n            found = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (found) {\r\n      score += tokenScore;\r\n      matches.push(token);\r\n    }\r\n  }\r\n  \r\n  // Bonus for favorites\r\n  if (item.favorite) score += 5;\r\n  \r\n  // Bonus for recent updates\r\n  if (item.updatedAt) {\r\n    const daysSinceUpdate = (Date.now() - new Date(item.updatedAt).getTime()) / (1000 * 60 * 60 * 24);\r\n    if (daysSinceUpdate < 7) score += 3;\r\n    else if (daysSinceUpdate < 30) score += 1;\r\n  }\r\n  \r\n  return { score, matches };\r\n}\r\n\r\nfunction sortResults(results: SearchResult[], sortBy?: string, sortOrder: 'asc' | 'desc' = 'desc'): SearchResult[] {\r\n  if (sortBy === 'relevance' || !sortBy) {\r\n    return results.sort((a, b) => b.score - a.score);\r\n  }\r\n  \r\n  return results.sort((a, b) => {\r\n    let aVal: any, bVal: any;\r\n    \r\n    switch (sortBy) {\r\n      case 'title':\r\n        aVal = a.item.title.toLowerCase();\r\n        bVal = b.item.title.toLowerCase();\r\n        break;\r\n      case 'createdAt':\r\n        aVal = a.item.createdAt || '';\r\n        bVal = b.item.createdAt || '';\r\n        break;\r\n      case 'updatedAt':\r\n        aVal = a.item.updatedAt || '';\r\n        bVal = b.item.updatedAt || '';\r\n        break;\r\n      case 'favorite':\r\n        aVal = a.item.favorite ? 1 : 0;\r\n        bVal = b.item.favorite ? 1 : 0;\r\n        break;\r\n      default:\r\n        return 0;\r\n    }\r\n    \r\n    if (sortOrder === 'asc') {\r\n      return aVal < bVal ? -1 : aVal > bVal ? 1 : 0;\r\n    } else {\r\n      return aVal > bVal ? -1 : aVal < bVal ? 1 : 0;\r\n    }\r\n  });\r\n}\r\n\r\nfunction parse(input: string) {\r\n  const parts = input.trim().toLowerCase().split(/\\s+/).filter(Boolean);\r\n  const tokens: string[] = [];\r\n  const exactMatches: string[] = [];\r\n  const filters: Record<string, any> = {};\r\n  \r\n  for (const p of parts) {\r\n    if (p.startsWith(\"fav:\")) {\r\n      filters.fav = p.endsWith(\"true\");\r\n    } else if (p.startsWith(\"hidden:\")) {\r\n      filters.hidden = p.endsWith(\"true\");\r\n    } else if (p.startsWith(\"bin:\")) {\r\n      filters.bin = p.endsWith(\"true\");\r\n    } else if (p.startsWith(\"tag:\")) {\r\n      const tag = p.slice(4);\r\n      tokens.push(tag);\r\n      exactMatches.push(tag);\r\n    } else if (p.startsWith(\"category:\")) {\r\n      filters.category = p.slice(9);\r\n    } else if (p.startsWith(\"date:\")) {\r\n      filters.date = p.slice(5);\r\n    } else if (p.startsWith('\"') && p.endsWith('\"')) {\r\n      // Exact phrase match\r\n      const phrase = p.slice(1, -1);\r\n      tokens.push(phrase);\r\n      exactMatches.push(phrase);\r\n    } else {\r\n      tokens.push(p);\r\n    }\r\n  }\r\n  \r\n  return { tokens, filters, exactMatches };\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
