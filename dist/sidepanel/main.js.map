{
  "version": 3,
  "sources": ["../../src/lib/db.ts", "../../src/sidepanel/main.ts"],
  "sourcesContent": ["import type { LibraryState, Prompt } from \"./schema\";\r\n\r\nconst DB_NAME = \"prompt-library\";\r\nconst DB_VERSION = 1;\r\nconst STORE = \"prompts\";\r\nconst META = \"meta\";\r\n\r\nexport interface Meta {\r\n  key: string;\r\n  value: any;\r\n}\r\n\r\nexport async function openDb(): Promise<IDBDatabase> {\r\n  return await new Promise((resolve, reject) => {\r\n    const req = indexedDB.open(DB_NAME, DB_VERSION);\r\n    req.onupgradeneeded = () => {\r\n      const db = req.result;\r\n      if (!db.objectStoreNames.contains(STORE)) {\r\n        const s = db.createObjectStore(STORE, { keyPath: \"id\" });\r\n        s.createIndex(\"by_deletedAt\", \"deletedAt\", { unique: false });\r\n      }\r\n      if (!db.objectStoreNames.contains(META)) {\r\n        db.createObjectStore(META, { keyPath: \"key\" });\r\n      }\r\n    };\r\n    req.onsuccess = () => resolve(req.result);\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n\r\nexport async function putPrompt(p: Prompt) {\r\n  const db = await openDb();\r\n  await tx(db, STORE, \"readwrite\", store => store.put(p));\r\n}\r\n\r\nexport async function getPrompt(id: string): Promise<Prompt | undefined> {\r\n  const db = await openDb();\r\n  return await tx(db, STORE, \"readonly\", store => reqPromise<Prompt | undefined>(store.get(id)));\r\n}\r\n\r\nexport async function listPrompts(includeDeleted = false): Promise<Prompt[]> {\r\n  const db = await openDb();\r\n  return await tx(db, STORE, \"readonly\", store => new Promise((resolve, reject) => {\r\n    const out: Prompt[] = [];\r\n    const req = store.openCursor();\r\n    req.onsuccess = () => {\r\n      const cur = req.result;\r\n      if (!cur) return resolve(out);\r\n      const val = cur.value as Prompt;\r\n      if (!val.deletedAt || includeDeleted) out.push(val);\r\n      cur.continue();\r\n    };\r\n    req.onerror = () => reject(req.error);\r\n  }));\r\n}\r\n\r\nexport async function putMeta(key: string, value: any) {\r\n  const db = await openDb();\r\n  await tx(db, META, \"readwrite\", store => store.put({ key, value }));\r\n}\r\n\r\nexport async function getMeta<T>(key: string): Promise<T | undefined> {\r\n  const db = await openDb();\r\n  return await tx(db, META, \"readonly\", store => reqPromise<T | undefined>(store.get(key)).then(r => r?.value));\r\n}\r\n\r\nfunction tx<T>(db: IDBDatabase, name: string, mode: IDBTransactionMode, fn: (store: IDBObjectStore) => any): Promise<T> {\r\n  return new Promise((resolve, reject) => {\r\n    const t = db.transaction(name, mode);\r\n    const store = t.objectStore(name);\r\n    let result: any;\r\n    try { result = fn(store); } catch (e) { reject(e); return; }\r\n    t.oncomplete = () => resolve(result);\r\n    t.onerror = () => reject(t.error);\r\n    t.onabort = () => reject(t.error);\r\n  });\r\n}\r\n\r\nfunction reqPromise<T>(req: IDBRequest): Promise<T> {\r\n  return new Promise((resolve, reject) => {\r\n    req.onsuccess = () => resolve(req.result as T);\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n", "import { listPrompts, putPrompt, getPrompt, getMeta, putMeta } from \"../lib/db\";\r\nimport type { Prompt } from \"../lib/schema\";\r\nimport { renderTemplate } from \"../lib/template\";\r\n\r\nconst q = document.getElementById(\"search\") as HTMLInputElement;\r\nconst list = document.getElementById(\"list\")!;\r\nconst titleEl = document.getElementById(\"title\")!;\r\nconst bodyEl = document.getElementById(\"body\") as HTMLTextAreaElement;\r\nconst toast = document.getElementById(\"toast\") as HTMLElement;\r\n\r\nlet currentId: string | null = null;\r\n\r\ninit();\r\n\r\nasync function init() {\r\n  await ensureSeeds();\r\n  wireEvents();\r\n  refresh();\r\n}\r\n\r\nfunction wireEvents() {\r\n  q.oninput = () => refresh();\r\n\r\n  (document.getElementById(\"btn-insert\") as HTMLButtonElement).onclick = async () => {\r\n    if (!currentId) return;\r\n    const p = await getPrompt(currentId);\r\n    if (!p) return;\r\n    await chrome.runtime.sendMessage({ type: \"insert\", text: bodyEl.value });\r\n    showToast(\"Inserted or copied\");\r\n  };\r\n\r\n  (document.getElementById(\"btn-copy\") as HTMLButtonElement).onclick = async () => {\r\n    await navigator.clipboard.writeText(bodyEl.value);\r\n    showToast(\"Copied to clipboard\");\r\n  };\r\n\r\n  (document.getElementById(\"btn-fav\") as HTMLButtonElement).onclick = toggleFavorite;\r\n  (document.getElementById(\"btn-hide\") as HTMLButtonElement).onclick = toggleHidden;\r\n  (document.getElementById(\"btn-clone\") as HTMLButtonElement).onclick = cloneCurrent;\r\n  (document.getElementById(\"btn-delete\") as HTMLButtonElement).onclick = trashCurrent;\r\n}\r\n\r\nasync function ensureSeeds() {\r\n  await chrome.runtime.sendMessage({ type: \"seed:ensure\" }).catch(() => {});\r\n}\r\n\r\nasync function refresh() {\r\n  const items = await listPrompts();\r\n  const term = q.value.toLowerCase();\r\n  const filtered = items\r\n    .filter(it => match(it, term))\r\n    .filter(it => !it.hidden && !it.deletedAt);\r\n\r\n  list.innerHTML = \"\";\r\n  for (const p of filtered) {\r\n    const div = document.createElement(\"div\");\r\n    div.className = \"item\" + (p.id === currentId ? \" active\" : \"\");\r\n    div.textContent = p.title;\r\n    div.onclick = () => select(p.id);\r\n    list.appendChild(div);\r\n  }\r\n\r\n  // Auto select first if none selected\r\n  if (!currentId && filtered[0]) {\r\n    select(filtered[0].id);\r\n  }\r\n}\r\n\r\nfunction match(p: Prompt, term: string): boolean {\r\n  if (!term) return true;\r\n  const hay = `${p.title} ${p.tags.join(\" \")} ${p.body}`.toLowerCase();\r\n  return term.split(/\\s+/).every(t => hay.includes(t));\r\n}\r\n\r\nasync function select(id: string) {\r\n  currentId = id;\r\n  const p = await getPrompt(id);\r\n  if (!p) return;\r\n  titleEl.textContent = p.title;\r\n  bodyEl.value = p.body;\r\n  await putMeta(\"lastUsedPromptId\", id);\r\n  refreshListClasses();\r\n}\r\n\r\nfunction refreshListClasses() {\r\n  for (const el of Array.from(list.children)) {\r\n    el.classList.toggle(\"active\", (el as HTMLElement).textContent === titleEl.textContent);\r\n  }\r\n}\r\n\r\nfunction showToast(msg: string) {\r\n  toast.textContent = msg;\r\n  toast.hidden = false;\r\n  setTimeout(() => (toast.hidden = true), 1200);\r\n}\r\n\r\nasync function toggleFavorite() {\r\n  if (!currentId) return;\r\n  const p = await getPrompt(currentId);\r\n  if (!p) return;\r\n  p.favorite = !p.favorite;\r\n  p.updatedAt = new Date().toISOString();\r\n  await putPrompt(p);\r\n  await refresh();\r\n  await select(p.id);\r\n}\r\n\r\nasync function toggleHidden() {\r\n  if (!currentId) return;\r\n  const p = await getPrompt(currentId);\r\n  if (!p) return;\r\n  p.hidden = !p.hidden;\r\n  p.updatedAt = new Date().toISOString();\r\n  await putPrompt(p);\r\n  currentId = null;\r\n  await refresh();\r\n}\r\n\r\nasync function cloneCurrent() {\r\n  if (!currentId) return;\r\n  const p = await getPrompt(currentId);\r\n  if (!p) return;\r\n  const clone: Prompt = {\r\n    ...p,\r\n    id: crypto.randomUUID(),\r\n    source: \"user\",\r\n    originId: p.source === \"seed\" ? p.id : p.originId,\r\n    title: p.title + \" (copy)\",\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString(),\r\n    version: 1\r\n  };\r\n  await putPrompt(clone);\r\n  await select(clone.id);\r\n  showToast(\"Cloned\");\r\n}\r\n\r\nasync function trashCurrent() {\r\n  if (!currentId) return;\r\n  const p = await getPrompt(currentId);\r\n  if (!p) return;\r\n  p.deletedAt = new Date().toISOString();\r\n  await putPrompt(p);\r\n  currentId = null;\r\n  titleEl.textContent = \"\";\r\n  bodyEl.value = \"\";\r\n  await refresh();\r\n  showToast(\"Moved to bin\");\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
